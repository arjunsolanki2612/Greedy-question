//https://leetcode.com/problems/bag-of-tokens/

class Solution {
public:
    int bagOfTokensScore(vector<int>& tokens, int power) {
        if(tokens.size()==1 && power>=tokens[0]){
            return 1;
        }

        sort(tokens.begin(),tokens.end());
        int i=0;
        int j=tokens.size()-1;
        int maxScore = 0;
        int currScore = 0;
        while(i<=j){
            if(power>=tokens[i]){
                power = power - tokens[i];
                currScore++;
                maxScore = max(maxScore,currScore);
                cout<<"score in if block "<<currScore<<endl;
                i++;
                cout<<" value of i "<<i<<endl;
            }else if(currScore>=1){
                power = power + tokens[j];
                currScore--;
                cout<<"score in else if block "<<currScore<<endl;
                j--;
                cout<<" value of j "<<j<<endl;
            }else{
                return maxScore;
            }

           
        }
        return maxScore;
    }
};
